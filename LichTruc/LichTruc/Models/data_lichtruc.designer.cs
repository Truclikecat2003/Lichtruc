#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LichTruc.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DutyScheduleSystem")]
	public partial class data_lichtrucDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAUDIT_LOG(AUDIT_LOG instance);
    partial void UpdateAUDIT_LOG(AUDIT_LOG instance);
    partial void DeleteAUDIT_LOG(AUDIT_LOG instance);
    partial void InsertDEPARTMENT(DEPARTMENT instance);
    partial void UpdateDEPARTMENT(DEPARTMENT instance);
    partial void DeleteDEPARTMENT(DEPARTMENT instance);
    partial void InsertEMPLOYEE(EMPLOYEE instance);
    partial void UpdateEMPLOYEE(EMPLOYEE instance);
    partial void DeleteEMPLOYEE(EMPLOYEE instance);
    partial void InsertPERMISSION(PERMISSION instance);
    partial void UpdatePERMISSION(PERMISSION instance);
    partial void DeletePERMISSION(PERMISSION instance);
    partial void InsertROLE_PERMISSION(ROLE_PERMISSION instance);
    partial void UpdateROLE_PERMISSION(ROLE_PERMISSION instance);
    partial void DeleteROLE_PERMISSION(ROLE_PERMISSION instance);
    partial void InsertROLE(ROLE instance);
    partial void UpdateROLE(ROLE instance);
    partial void DeleteROLE(ROLE instance);
    partial void InsertSCHEDULE_DETAIL(SCHEDULE_DETAIL instance);
    partial void UpdateSCHEDULE_DETAIL(SCHEDULE_DETAIL instance);
    partial void DeleteSCHEDULE_DETAIL(SCHEDULE_DETAIL instance);
    partial void InsertSCHEDULE(SCHEDULE instance);
    partial void UpdateSCHEDULE(SCHEDULE instance);
    partial void DeleteSCHEDULE(SCHEDULE instance);
    partial void InsertUSER_DEPARTMENT_ACCESS(USER_DEPARTMENT_ACCESS instance);
    partial void UpdateUSER_DEPARTMENT_ACCESS(USER_DEPARTMENT_ACCESS instance);
    partial void DeleteUSER_DEPARTMENT_ACCESS(USER_DEPARTMENT_ACCESS instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    #endregion
		
		public data_lichtrucDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public data_lichtrucDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public data_lichtrucDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public data_lichtrucDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AUDIT_LOG> AUDIT_LOGs
		{
			get
			{
				return this.GetTable<AUDIT_LOG>();
			}
		}
		
		public System.Data.Linq.Table<DEPARTMENT> DEPARTMENTs
		{
			get
			{
				return this.GetTable<DEPARTMENT>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this.GetTable<EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<PERMISSION> PERMISSIONs
		{
			get
			{
				return this.GetTable<PERMISSION>();
			}
		}
		
		public System.Data.Linq.Table<ROLE_PERMISSION> ROLE_PERMISSIONs
		{
			get
			{
				return this.GetTable<ROLE_PERMISSION>();
			}
		}
		
		public System.Data.Linq.Table<ROLE> ROLEs
		{
			get
			{
				return this.GetTable<ROLE>();
			}
		}
		
		public System.Data.Linq.Table<SCHEDULE_DETAIL> SCHEDULE_DETAILs
		{
			get
			{
				return this.GetTable<SCHEDULE_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<SCHEDULE> SCHEDULEs
		{
			get
			{
				return this.GetTable<SCHEDULE>();
			}
		}
		
		public System.Data.Linq.Table<USER_DEPARTMENT_ACCESS> USER_DEPARTMENT_ACCESSes
		{
			get
			{
				return this.GetTable<USER_DEPARTMENT_ACCESS>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AUDIT_LOGS")]
	public partial class AUDIT_LOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _log_id;
		
		private string _table_name;
		
		private string _action_type;
		
		private int _record_id;
		
		private string _old_value;
		
		private string _new_value;
		
		private int _user_id;
		
		private System.Nullable<System.DateTime> _action_date;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlog_idChanging(int value);
    partial void Onlog_idChanged();
    partial void Ontable_nameChanging(string value);
    partial void Ontable_nameChanged();
    partial void Onaction_typeChanging(string value);
    partial void Onaction_typeChanged();
    partial void Onrecord_idChanging(int value);
    partial void Onrecord_idChanged();
    partial void Onold_valueChanging(string value);
    partial void Onold_valueChanged();
    partial void Onnew_valueChanging(string value);
    partial void Onnew_valueChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onaction_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onaction_dateChanged();
    #endregion
		
		public AUDIT_LOG()
		{
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_log_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int log_id
		{
			get
			{
				return this._log_id;
			}
			set
			{
				if ((this._log_id != value))
				{
					this.Onlog_idChanging(value);
					this.SendPropertyChanging();
					this._log_id = value;
					this.SendPropertyChanged("log_id");
					this.Onlog_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_table_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string table_name
		{
			get
			{
				return this._table_name;
			}
			set
			{
				if ((this._table_name != value))
				{
					this.Ontable_nameChanging(value);
					this.SendPropertyChanging();
					this._table_name = value;
					this.SendPropertyChanged("table_name");
					this.Ontable_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_type", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string action_type
		{
			get
			{
				return this._action_type;
			}
			set
			{
				if ((this._action_type != value))
				{
					this.Onaction_typeChanging(value);
					this.SendPropertyChanging();
					this._action_type = value;
					this.SendPropertyChanged("action_type");
					this.Onaction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_record_id", DbType="Int NOT NULL")]
		public int record_id
		{
			get
			{
				return this._record_id;
			}
			set
			{
				if ((this._record_id != value))
				{
					this.Onrecord_idChanging(value);
					this.SendPropertyChanging();
					this._record_id = value;
					this.SendPropertyChanged("record_id");
					this.Onrecord_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_old_value", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string old_value
		{
			get
			{
				return this._old_value;
			}
			set
			{
				if ((this._old_value != value))
				{
					this.Onold_valueChanging(value);
					this.SendPropertyChanging();
					this._old_value = value;
					this.SendPropertyChanged("old_value");
					this.Onold_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_new_value", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string new_value
		{
			get
			{
				return this._new_value;
			}
			set
			{
				if ((this._new_value != value))
				{
					this.Onnew_valueChanging(value);
					this.SendPropertyChanging();
					this._new_value = value;
					this.SendPropertyChanged("new_value");
					this.Onnew_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> action_date
		{
			get
			{
				return this._action_date;
			}
			set
			{
				if ((this._action_date != value))
				{
					this.Onaction_dateChanging(value);
					this.SendPropertyChanging();
					this._action_date = value;
					this.SendPropertyChanged("action_date");
					this.Onaction_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_AUDIT_LOG", Storage="_USER", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.AUDIT_LOGs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.AUDIT_LOGs.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEPARTMENTS")]
	public partial class DEPARTMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dept_id;
		
		private string _dept_name;
		
		private string _dept_code;
		
		private System.Nullable<int> _parent_dept_id;
		
		private System.Nullable<bool> _is_active;
		
		private System.Nullable<System.DateTime> _created_date;
		
		private System.Nullable<System.DateTime> _modified_date;
		
		private EntitySet<DEPARTMENT> _DEPARTMENTs;
		
		private EntitySet<EMPLOYEE> _EMPLOYEEs;
		
		private EntitySet<SCHEDULE> _SCHEDULEs;
		
		private EntitySet<USER_DEPARTMENT_ACCESS> _USER_DEPARTMENT_ACCESSes;
		
		private EntitySet<USER> _USERs;
		
		private EntityRef<DEPARTMENT> _DEPARTMENT1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondept_idChanging(int value);
    partial void Ondept_idChanged();
    partial void Ondept_nameChanging(string value);
    partial void Ondept_nameChanged();
    partial void Ondept_codeChanging(string value);
    partial void Ondept_codeChanged();
    partial void Onparent_dept_idChanging(System.Nullable<int> value);
    partial void Onparent_dept_idChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    partial void Oncreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_dateChanged();
    partial void Onmodified_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_dateChanged();
    #endregion
		
		public DEPARTMENT()
		{
			this._DEPARTMENTs = new EntitySet<DEPARTMENT>(new Action<DEPARTMENT>(this.attach_DEPARTMENTs), new Action<DEPARTMENT>(this.detach_DEPARTMENTs));
			this._EMPLOYEEs = new EntitySet<EMPLOYEE>(new Action<EMPLOYEE>(this.attach_EMPLOYEEs), new Action<EMPLOYEE>(this.detach_EMPLOYEEs));
			this._SCHEDULEs = new EntitySet<SCHEDULE>(new Action<SCHEDULE>(this.attach_SCHEDULEs), new Action<SCHEDULE>(this.detach_SCHEDULEs));
			this._USER_DEPARTMENT_ACCESSes = new EntitySet<USER_DEPARTMENT_ACCESS>(new Action<USER_DEPARTMENT_ACCESS>(this.attach_USER_DEPARTMENT_ACCESSes), new Action<USER_DEPARTMENT_ACCESS>(this.detach_USER_DEPARTMENT_ACCESSes));
			this._USERs = new EntitySet<USER>(new Action<USER>(this.attach_USERs), new Action<USER>(this.detach_USERs));
			this._DEPARTMENT1 = default(EntityRef<DEPARTMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int dept_id
		{
			get
			{
				return this._dept_id;
			}
			set
			{
				if ((this._dept_id != value))
				{
					this.Ondept_idChanging(value);
					this.SendPropertyChanging();
					this._dept_id = value;
					this.SendPropertyChanged("dept_id");
					this.Ondept_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string dept_name
		{
			get
			{
				return this._dept_name;
			}
			set
			{
				if ((this._dept_name != value))
				{
					this.Ondept_nameChanging(value);
					this.SendPropertyChanging();
					this._dept_name = value;
					this.SendPropertyChanged("dept_name");
					this.Ondept_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_code", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string dept_code
		{
			get
			{
				return this._dept_code;
			}
			set
			{
				if ((this._dept_code != value))
				{
					this.Ondept_codeChanging(value);
					this.SendPropertyChanging();
					this._dept_code = value;
					this.SendPropertyChanged("dept_code");
					this.Ondept_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_dept_id", DbType="Int")]
		public System.Nullable<int> parent_dept_id
		{
			get
			{
				return this._parent_dept_id;
			}
			set
			{
				if ((this._parent_dept_id != value))
				{
					if (this._DEPARTMENT1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparent_dept_idChanging(value);
					this.SendPropertyChanging();
					this._parent_dept_id = value;
					this.SendPropertyChanged("parent_dept_id");
					this.Onparent_dept_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> created_date
		{
			get
			{
				return this._created_date;
			}
			set
			{
				if ((this._created_date != value))
				{
					this.Oncreated_dateChanging(value);
					this.SendPropertyChanging();
					this._created_date = value;
					this.SendPropertyChanged("created_date");
					this.Oncreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> modified_date
		{
			get
			{
				return this._modified_date;
			}
			set
			{
				if ((this._modified_date != value))
				{
					this.Onmodified_dateChanging(value);
					this.SendPropertyChanging();
					this._modified_date = value;
					this.SendPropertyChanged("modified_date");
					this.Onmodified_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_DEPARTMENT", Storage="_DEPARTMENTs", ThisKey="dept_id", OtherKey="parent_dept_id")]
		public EntitySet<DEPARTMENT> DEPARTMENTs
		{
			get
			{
				return this._DEPARTMENTs;
			}
			set
			{
				this._DEPARTMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_EMPLOYEE", Storage="_EMPLOYEEs", ThisKey="dept_id", OtherKey="dept_id")]
		public EntitySet<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this._EMPLOYEEs;
			}
			set
			{
				this._EMPLOYEEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_SCHEDULE", Storage="_SCHEDULEs", ThisKey="dept_id", OtherKey="dept_id")]
		public EntitySet<SCHEDULE> SCHEDULEs
		{
			get
			{
				return this._SCHEDULEs;
			}
			set
			{
				this._SCHEDULEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_USER_DEPARTMENT_ACCESS", Storage="_USER_DEPARTMENT_ACCESSes", ThisKey="dept_id", OtherKey="dept_id")]
		public EntitySet<USER_DEPARTMENT_ACCESS> USER_DEPARTMENT_ACCESSes
		{
			get
			{
				return this._USER_DEPARTMENT_ACCESSes;
			}
			set
			{
				this._USER_DEPARTMENT_ACCESSes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_USER", Storage="_USERs", ThisKey="dept_id", OtherKey="primary_dept_id")]
		public EntitySet<USER> USERs
		{
			get
			{
				return this._USERs;
			}
			set
			{
				this._USERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_DEPARTMENT", Storage="_DEPARTMENT1", ThisKey="parent_dept_id", OtherKey="dept_id", IsForeignKey=true)]
		public DEPARTMENT DEPARTMENT1
		{
			get
			{
				return this._DEPARTMENT1.Entity;
			}
			set
			{
				DEPARTMENT previousValue = this._DEPARTMENT1.Entity;
				if (((previousValue != value) 
							|| (this._DEPARTMENT1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPARTMENT1.Entity = null;
						previousValue.DEPARTMENTs.Remove(this);
					}
					this._DEPARTMENT1.Entity = value;
					if ((value != null))
					{
						value.DEPARTMENTs.Add(this);
						this._parent_dept_id = value.dept_id;
					}
					else
					{
						this._parent_dept_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEPARTMENT1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEPARTMENTs(DEPARTMENT entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT1 = this;
		}
		
		private void detach_DEPARTMENTs(DEPARTMENT entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT1 = null;
		}
		
		private void attach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT = this;
		}
		
		private void detach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT = null;
		}
		
		private void attach_SCHEDULEs(SCHEDULE entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT = this;
		}
		
		private void detach_SCHEDULEs(SCHEDULE entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT = null;
		}
		
		private void attach_USER_DEPARTMENT_ACCESSes(USER_DEPARTMENT_ACCESS entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT = this;
		}
		
		private void detach_USER_DEPARTMENT_ACCESSes(USER_DEPARTMENT_ACCESS entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT = null;
		}
		
		private void attach_USERs(USER entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT = this;
		}
		
		private void detach_USERs(USER entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEES")]
	public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _emp_id;
		
		private string _emp_code;
		
		private string _full_name;
		
		private string _position;
		
		private System.Nullable<bool> _has_license;
		
		private int _dept_id;
		
		private System.Nullable<bool> _is_active;
		
		private System.Nullable<System.DateTime> _created_date;
		
		private System.Nullable<System.DateTime> _modified_date;
		
		private EntitySet<SCHEDULE_DETAIL> _SCHEDULE_DETAILs;
		
		private EntitySet<USER> _USERs;
		
		private EntityRef<DEPARTMENT> _DEPARTMENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemp_idChanging(int value);
    partial void Onemp_idChanged();
    partial void Onemp_codeChanging(string value);
    partial void Onemp_codeChanged();
    partial void Onfull_nameChanging(string value);
    partial void Onfull_nameChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    partial void Onhas_licenseChanging(System.Nullable<bool> value);
    partial void Onhas_licenseChanged();
    partial void Ondept_idChanging(int value);
    partial void Ondept_idChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    partial void Oncreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_dateChanged();
    partial void Onmodified_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_dateChanged();
    #endregion
		
		public EMPLOYEE()
		{
			this._SCHEDULE_DETAILs = new EntitySet<SCHEDULE_DETAIL>(new Action<SCHEDULE_DETAIL>(this.attach_SCHEDULE_DETAILs), new Action<SCHEDULE_DETAIL>(this.detach_SCHEDULE_DETAILs));
			this._USERs = new EntitySet<USER>(new Action<USER>(this.attach_USERs), new Action<USER>(this.detach_USERs));
			this._DEPARTMENT = default(EntityRef<DEPARTMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string emp_code
		{
			get
			{
				return this._emp_code;
			}
			set
			{
				if ((this._emp_code != value))
				{
					this.Onemp_codeChanging(value);
					this.SendPropertyChanging();
					this._emp_code = value;
					this.SendPropertyChanged("emp_code");
					this.Onemp_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_full_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string full_name
		{
			get
			{
				return this._full_name;
			}
			set
			{
				if ((this._full_name != value))
				{
					this.Onfull_nameChanging(value);
					this.SendPropertyChanging();
					this._full_name = value;
					this.SendPropertyChanged("full_name");
					this.Onfull_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="NVarChar(100)")]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_has_license", DbType="Bit")]
		public System.Nullable<bool> has_license
		{
			get
			{
				return this._has_license;
			}
			set
			{
				if ((this._has_license != value))
				{
					this.Onhas_licenseChanging(value);
					this.SendPropertyChanging();
					this._has_license = value;
					this.SendPropertyChanged("has_license");
					this.Onhas_licenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_id", DbType="Int NOT NULL")]
		public int dept_id
		{
			get
			{
				return this._dept_id;
			}
			set
			{
				if ((this._dept_id != value))
				{
					if (this._DEPARTMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondept_idChanging(value);
					this.SendPropertyChanging();
					this._dept_id = value;
					this.SendPropertyChanged("dept_id");
					this.Ondept_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> created_date
		{
			get
			{
				return this._created_date;
			}
			set
			{
				if ((this._created_date != value))
				{
					this.Oncreated_dateChanging(value);
					this.SendPropertyChanging();
					this._created_date = value;
					this.SendPropertyChanged("created_date");
					this.Oncreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> modified_date
		{
			get
			{
				return this._modified_date;
			}
			set
			{
				if ((this._modified_date != value))
				{
					this.Onmodified_dateChanging(value);
					this.SendPropertyChanging();
					this._modified_date = value;
					this.SendPropertyChanged("modified_date");
					this.Onmodified_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_SCHEDULE_DETAIL", Storage="_SCHEDULE_DETAILs", ThisKey="emp_id", OtherKey="emp_id")]
		public EntitySet<SCHEDULE_DETAIL> SCHEDULE_DETAILs
		{
			get
			{
				return this._SCHEDULE_DETAILs;
			}
			set
			{
				this._SCHEDULE_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_USER", Storage="_USERs", ThisKey="emp_id", OtherKey="emp_id")]
		public EntitySet<USER> USERs
		{
			get
			{
				return this._USERs;
			}
			set
			{
				this._USERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_EMPLOYEE", Storage="_DEPARTMENT", ThisKey="dept_id", OtherKey="dept_id", IsForeignKey=true)]
		public DEPARTMENT DEPARTMENT
		{
			get
			{
				return this._DEPARTMENT.Entity;
			}
			set
			{
				DEPARTMENT previousValue = this._DEPARTMENT.Entity;
				if (((previousValue != value) 
							|| (this._DEPARTMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPARTMENT.Entity = null;
						previousValue.EMPLOYEEs.Remove(this);
					}
					this._DEPARTMENT.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEEs.Add(this);
						this._dept_id = value.dept_id;
					}
					else
					{
						this._dept_id = default(int);
					}
					this.SendPropertyChanged("DEPARTMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SCHEDULE_DETAILs(SCHEDULE_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_SCHEDULE_DETAILs(SCHEDULE_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
		
		private void attach_USERs(USER entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_USERs(USER entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERMISSIONS")]
	public partial class PERMISSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _permission_id;
		
		private string _permission_name;
		
		private string _permission_description;
		
		private string _module_name;
		
		private System.Nullable<System.DateTime> _created_date;
		
		private EntitySet<ROLE_PERMISSION> _ROLE_PERMISSIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpermission_idChanging(int value);
    partial void Onpermission_idChanged();
    partial void Onpermission_nameChanging(string value);
    partial void Onpermission_nameChanged();
    partial void Onpermission_descriptionChanging(string value);
    partial void Onpermission_descriptionChanged();
    partial void Onmodule_nameChanging(string value);
    partial void Onmodule_nameChanged();
    partial void Oncreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_dateChanged();
    #endregion
		
		public PERMISSION()
		{
			this._ROLE_PERMISSIONs = new EntitySet<ROLE_PERMISSION>(new Action<ROLE_PERMISSION>(this.attach_ROLE_PERMISSIONs), new Action<ROLE_PERMISSION>(this.detach_ROLE_PERMISSIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int permission_id
		{
			get
			{
				return this._permission_id;
			}
			set
			{
				if ((this._permission_id != value))
				{
					this.Onpermission_idChanging(value);
					this.SendPropertyChanging();
					this._permission_id = value;
					this.SendPropertyChanged("permission_id");
					this.Onpermission_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string permission_name
		{
			get
			{
				return this._permission_name;
			}
			set
			{
				if ((this._permission_name != value))
				{
					this.Onpermission_nameChanging(value);
					this.SendPropertyChanging();
					this._permission_name = value;
					this.SendPropertyChanged("permission_name");
					this.Onpermission_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_description", DbType="NVarChar(200)")]
		public string permission_description
		{
			get
			{
				return this._permission_description;
			}
			set
			{
				if ((this._permission_description != value))
				{
					this.Onpermission_descriptionChanging(value);
					this.SendPropertyChanging();
					this._permission_description = value;
					this.SendPropertyChanged("permission_description");
					this.Onpermission_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string module_name
		{
			get
			{
				return this._module_name;
			}
			set
			{
				if ((this._module_name != value))
				{
					this.Onmodule_nameChanging(value);
					this.SendPropertyChanging();
					this._module_name = value;
					this.SendPropertyChanged("module_name");
					this.Onmodule_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> created_date
		{
			get
			{
				return this._created_date;
			}
			set
			{
				if ((this._created_date != value))
				{
					this.Oncreated_dateChanging(value);
					this.SendPropertyChanging();
					this._created_date = value;
					this.SendPropertyChanged("created_date");
					this.Oncreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERMISSION_ROLE_PERMISSION", Storage="_ROLE_PERMISSIONs", ThisKey="permission_id", OtherKey="permission_id")]
		public EntitySet<ROLE_PERMISSION> ROLE_PERMISSIONs
		{
			get
			{
				return this._ROLE_PERMISSIONs;
			}
			set
			{
				this._ROLE_PERMISSIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ROLE_PERMISSIONs(ROLE_PERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.PERMISSION = this;
		}
		
		private void detach_ROLE_PERMISSIONs(ROLE_PERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.PERMISSION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROLE_PERMISSIONS")]
	public partial class ROLE_PERMISSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _role_id;
		
		private int _permission_id;
		
		private System.Nullable<System.DateTime> _created_date;
		
		private EntityRef<PERMISSION> _PERMISSION;
		
		private EntityRef<ROLE> _ROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onpermission_idChanging(int value);
    partial void Onpermission_idChanged();
    partial void Oncreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_dateChanged();
    #endregion
		
		public ROLE_PERMISSION()
		{
			this._PERMISSION = default(EntityRef<PERMISSION>);
			this._ROLE = default(EntityRef<ROLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int permission_id
		{
			get
			{
				return this._permission_id;
			}
			set
			{
				if ((this._permission_id != value))
				{
					if (this._PERMISSION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpermission_idChanging(value);
					this.SendPropertyChanging();
					this._permission_id = value;
					this.SendPropertyChanged("permission_id");
					this.Onpermission_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> created_date
		{
			get
			{
				return this._created_date;
			}
			set
			{
				if ((this._created_date != value))
				{
					this.Oncreated_dateChanging(value);
					this.SendPropertyChanging();
					this._created_date = value;
					this.SendPropertyChanged("created_date");
					this.Oncreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERMISSION_ROLE_PERMISSION", Storage="_PERMISSION", ThisKey="permission_id", OtherKey="permission_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PERMISSION PERMISSION
		{
			get
			{
				return this._PERMISSION.Entity;
			}
			set
			{
				PERMISSION previousValue = this._PERMISSION.Entity;
				if (((previousValue != value) 
							|| (this._PERMISSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERMISSION.Entity = null;
						previousValue.ROLE_PERMISSIONs.Remove(this);
					}
					this._PERMISSION.Entity = value;
					if ((value != null))
					{
						value.ROLE_PERMISSIONs.Add(this);
						this._permission_id = value.permission_id;
					}
					else
					{
						this._permission_id = default(int);
					}
					this.SendPropertyChanged("PERMISSION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_ROLE_PERMISSION", Storage="_ROLE", ThisKey="role_id", OtherKey="role_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ROLE ROLE
		{
			get
			{
				return this._ROLE.Entity;
			}
			set
			{
				ROLE previousValue = this._ROLE.Entity;
				if (((previousValue != value) 
							|| (this._ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ROLE.Entity = null;
						previousValue.ROLE_PERMISSIONs.Remove(this);
					}
					this._ROLE.Entity = value;
					if ((value != null))
					{
						value.ROLE_PERMISSIONs.Add(this);
						this._role_id = value.role_id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("ROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROLES")]
	public partial class ROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _role_id;
		
		private string _role_name;
		
		private string _role_description;
		
		private System.Nullable<System.DateTime> _created_date;
		
		private System.Nullable<System.DateTime> _modified_date;
		
		private EntitySet<ROLE_PERMISSION> _ROLE_PERMISSIONs;
		
		private EntitySet<USER> _USERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onrole_nameChanging(string value);
    partial void Onrole_nameChanged();
    partial void Onrole_descriptionChanging(string value);
    partial void Onrole_descriptionChanged();
    partial void Oncreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_dateChanged();
    partial void Onmodified_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_dateChanged();
    #endregion
		
		public ROLE()
		{
			this._ROLE_PERMISSIONs = new EntitySet<ROLE_PERMISSION>(new Action<ROLE_PERMISSION>(this.attach_ROLE_PERMISSIONs), new Action<ROLE_PERMISSION>(this.detach_ROLE_PERMISSIONs));
			this._USERs = new EntitySet<USER>(new Action<USER>(this.attach_USERs), new Action<USER>(this.detach_USERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string role_name
		{
			get
			{
				return this._role_name;
			}
			set
			{
				if ((this._role_name != value))
				{
					this.Onrole_nameChanging(value);
					this.SendPropertyChanging();
					this._role_name = value;
					this.SendPropertyChanged("role_name");
					this.Onrole_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_description", DbType="NVarChar(200)")]
		public string role_description
		{
			get
			{
				return this._role_description;
			}
			set
			{
				if ((this._role_description != value))
				{
					this.Onrole_descriptionChanging(value);
					this.SendPropertyChanging();
					this._role_description = value;
					this.SendPropertyChanged("role_description");
					this.Onrole_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> created_date
		{
			get
			{
				return this._created_date;
			}
			set
			{
				if ((this._created_date != value))
				{
					this.Oncreated_dateChanging(value);
					this.SendPropertyChanging();
					this._created_date = value;
					this.SendPropertyChanged("created_date");
					this.Oncreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> modified_date
		{
			get
			{
				return this._modified_date;
			}
			set
			{
				if ((this._modified_date != value))
				{
					this.Onmodified_dateChanging(value);
					this.SendPropertyChanging();
					this._modified_date = value;
					this.SendPropertyChanged("modified_date");
					this.Onmodified_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_ROLE_PERMISSION", Storage="_ROLE_PERMISSIONs", ThisKey="role_id", OtherKey="role_id")]
		public EntitySet<ROLE_PERMISSION> ROLE_PERMISSIONs
		{
			get
			{
				return this._ROLE_PERMISSIONs;
			}
			set
			{
				this._ROLE_PERMISSIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_USER", Storage="_USERs", ThisKey="role_id", OtherKey="role_id")]
		public EntitySet<USER> USERs
		{
			get
			{
				return this._USERs;
			}
			set
			{
				this._USERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ROLE_PERMISSIONs(ROLE_PERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = this;
		}
		
		private void detach_ROLE_PERMISSIONs(ROLE_PERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = null;
		}
		
		private void attach_USERs(USER entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = this;
		}
		
		private void detach_USERs(USER entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCHEDULE_DETAILS")]
	public partial class SCHEDULE_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _detail_id;
		
		private int _schedule_id;
		
		private int _emp_id;
		
		private System.DateTime _duty_date;
		
		private string _shift_time;
		
		private string _duty_type;
		
		private System.Nullable<bool> _is_visible;
		
		private string _notes;
		
		private System.Nullable<System.DateTime> _created_date;
		
		private System.Nullable<System.DateTime> _modified_date;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
		private EntityRef<SCHEDULE> _SCHEDULE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondetail_idChanging(int value);
    partial void Ondetail_idChanged();
    partial void Onschedule_idChanging(int value);
    partial void Onschedule_idChanged();
    partial void Onemp_idChanging(int value);
    partial void Onemp_idChanged();
    partial void Onduty_dateChanging(System.DateTime value);
    partial void Onduty_dateChanged();
    partial void Onshift_timeChanging(string value);
    partial void Onshift_timeChanged();
    partial void Onduty_typeChanging(string value);
    partial void Onduty_typeChanged();
    partial void Onis_visibleChanging(System.Nullable<bool> value);
    partial void Onis_visibleChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void Oncreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_dateChanged();
    partial void Onmodified_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_dateChanged();
    #endregion
		
		public SCHEDULE_DETAIL()
		{
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			this._SCHEDULE = default(EntityRef<SCHEDULE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detail_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int detail_id
		{
			get
			{
				return this._detail_id;
			}
			set
			{
				if ((this._detail_id != value))
				{
					this.Ondetail_idChanging(value);
					this.SendPropertyChanging();
					this._detail_id = value;
					this.SendPropertyChanged("detail_id");
					this.Ondetail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule_id", DbType="Int NOT NULL")]
		public int schedule_id
		{
			get
			{
				return this._schedule_id;
			}
			set
			{
				if ((this._schedule_id != value))
				{
					if (this._SCHEDULE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onschedule_idChanging(value);
					this.SendPropertyChanging();
					this._schedule_id = value;
					this.SendPropertyChanged("schedule_id");
					this.Onschedule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int NOT NULL")]
		public int emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duty_date", DbType="Date NOT NULL")]
		public System.DateTime duty_date
		{
			get
			{
				return this._duty_date;
			}
			set
			{
				if ((this._duty_date != value))
				{
					this.Onduty_dateChanging(value);
					this.SendPropertyChanging();
					this._duty_date = value;
					this.SendPropertyChanged("duty_date");
					this.Onduty_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shift_time", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string shift_time
		{
			get
			{
				return this._shift_time;
			}
			set
			{
				if ((this._shift_time != value))
				{
					this.Onshift_timeChanging(value);
					this.SendPropertyChanging();
					this._shift_time = value;
					this.SendPropertyChanged("shift_time");
					this.Onshift_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duty_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string duty_type
		{
			get
			{
				return this._duty_type;
			}
			set
			{
				if ((this._duty_type != value))
				{
					this.Onduty_typeChanging(value);
					this.SendPropertyChanging();
					this._duty_type = value;
					this.SendPropertyChanged("duty_type");
					this.Onduty_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_visible", DbType="Bit")]
		public System.Nullable<bool> is_visible
		{
			get
			{
				return this._is_visible;
			}
			set
			{
				if ((this._is_visible != value))
				{
					this.Onis_visibleChanging(value);
					this.SendPropertyChanging();
					this._is_visible = value;
					this.SendPropertyChanged("is_visible");
					this.Onis_visibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> created_date
		{
			get
			{
				return this._created_date;
			}
			set
			{
				if ((this._created_date != value))
				{
					this.Oncreated_dateChanging(value);
					this.SendPropertyChanging();
					this._created_date = value;
					this.SendPropertyChanged("created_date");
					this.Oncreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> modified_date
		{
			get
			{
				return this._modified_date;
			}
			set
			{
				if ((this._modified_date != value))
				{
					this.Onmodified_dateChanging(value);
					this.SendPropertyChanging();
					this._modified_date = value;
					this.SendPropertyChanged("modified_date");
					this.Onmodified_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_SCHEDULE_DETAIL", Storage="_EMPLOYEE", ThisKey="emp_id", OtherKey="emp_id", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.SCHEDULE_DETAILs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.SCHEDULE_DETAILs.Add(this);
						this._emp_id = value.emp_id;
					}
					else
					{
						this._emp_id = default(int);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHEDULE_SCHEDULE_DETAIL", Storage="_SCHEDULE", ThisKey="schedule_id", OtherKey="schedule_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SCHEDULE SCHEDULE
		{
			get
			{
				return this._SCHEDULE.Entity;
			}
			set
			{
				SCHEDULE previousValue = this._SCHEDULE.Entity;
				if (((previousValue != value) 
							|| (this._SCHEDULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCHEDULE.Entity = null;
						previousValue.SCHEDULE_DETAILs.Remove(this);
					}
					this._SCHEDULE.Entity = value;
					if ((value != null))
					{
						value.SCHEDULE_DETAILs.Add(this);
						this._schedule_id = value.schedule_id;
					}
					else
					{
						this._schedule_id = default(int);
					}
					this.SendPropertyChanged("SCHEDULE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCHEDULES")]
	public partial class SCHEDULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _schedule_id;
		
		private System.DateTime _week_start_date;
		
		private System.DateTime _week_end_date;
		
		private string _status;
		
		private int _created_by;
		
		private System.Nullable<int> _approved_by;
		
		private System.Nullable<System.DateTime> _created_date;
		
		private System.Nullable<System.DateTime> _locked_date;
		
		private System.Nullable<System.DateTime> _approved_date;
		
		private int _dept_id;
		
		private string _notes;
		
		private EntitySet<SCHEDULE_DETAIL> _SCHEDULE_DETAILs;
		
		private EntityRef<DEPARTMENT> _DEPARTMENT;
		
		private EntityRef<USER> _USER;
		
		private EntityRef<USER> _USER1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onschedule_idChanging(int value);
    partial void Onschedule_idChanged();
    partial void Onweek_start_dateChanging(System.DateTime value);
    partial void Onweek_start_dateChanged();
    partial void Onweek_end_dateChanging(System.DateTime value);
    partial void Onweek_end_dateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Oncreated_byChanging(int value);
    partial void Oncreated_byChanged();
    partial void Onapproved_byChanging(System.Nullable<int> value);
    partial void Onapproved_byChanged();
    partial void Oncreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_dateChanged();
    partial void Onlocked_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onlocked_dateChanged();
    partial void Onapproved_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onapproved_dateChanged();
    partial void Ondept_idChanging(int value);
    partial void Ondept_idChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    #endregion
		
		public SCHEDULE()
		{
			this._SCHEDULE_DETAILs = new EntitySet<SCHEDULE_DETAIL>(new Action<SCHEDULE_DETAIL>(this.attach_SCHEDULE_DETAILs), new Action<SCHEDULE_DETAIL>(this.detach_SCHEDULE_DETAILs));
			this._DEPARTMENT = default(EntityRef<DEPARTMENT>);
			this._USER = default(EntityRef<USER>);
			this._USER1 = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int schedule_id
		{
			get
			{
				return this._schedule_id;
			}
			set
			{
				if ((this._schedule_id != value))
				{
					this.Onschedule_idChanging(value);
					this.SendPropertyChanging();
					this._schedule_id = value;
					this.SendPropertyChanged("schedule_id");
					this.Onschedule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_week_start_date", DbType="Date NOT NULL")]
		public System.DateTime week_start_date
		{
			get
			{
				return this._week_start_date;
			}
			set
			{
				if ((this._week_start_date != value))
				{
					this.Onweek_start_dateChanging(value);
					this.SendPropertyChanging();
					this._week_start_date = value;
					this.SendPropertyChanged("week_start_date");
					this.Onweek_start_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_week_end_date", DbType="Date NOT NULL")]
		public System.DateTime week_end_date
		{
			get
			{
				return this._week_end_date;
			}
			set
			{
				if ((this._week_end_date != value))
				{
					this.Onweek_end_dateChanging(value);
					this.SendPropertyChanging();
					this._week_end_date = value;
					this.SendPropertyChanged("week_end_date");
					this.Onweek_end_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="Int NOT NULL")]
		public int created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					if (this._USER1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved_by", DbType="Int")]
		public System.Nullable<int> approved_by
		{
			get
			{
				return this._approved_by;
			}
			set
			{
				if ((this._approved_by != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapproved_byChanging(value);
					this.SendPropertyChanging();
					this._approved_by = value;
					this.SendPropertyChanged("approved_by");
					this.Onapproved_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> created_date
		{
			get
			{
				return this._created_date;
			}
			set
			{
				if ((this._created_date != value))
				{
					this.Oncreated_dateChanging(value);
					this.SendPropertyChanging();
					this._created_date = value;
					this.SendPropertyChanged("created_date");
					this.Oncreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locked_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> locked_date
		{
			get
			{
				return this._locked_date;
			}
			set
			{
				if ((this._locked_date != value))
				{
					this.Onlocked_dateChanging(value);
					this.SendPropertyChanging();
					this._locked_date = value;
					this.SendPropertyChanged("locked_date");
					this.Onlocked_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> approved_date
		{
			get
			{
				return this._approved_date;
			}
			set
			{
				if ((this._approved_date != value))
				{
					this.Onapproved_dateChanging(value);
					this.SendPropertyChanging();
					this._approved_date = value;
					this.SendPropertyChanged("approved_date");
					this.Onapproved_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_id", DbType="Int NOT NULL")]
		public int dept_id
		{
			get
			{
				return this._dept_id;
			}
			set
			{
				if ((this._dept_id != value))
				{
					if (this._DEPARTMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondept_idChanging(value);
					this.SendPropertyChanging();
					this._dept_id = value;
					this.SendPropertyChanged("dept_id");
					this.Ondept_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCHEDULE_SCHEDULE_DETAIL", Storage="_SCHEDULE_DETAILs", ThisKey="schedule_id", OtherKey="schedule_id")]
		public EntitySet<SCHEDULE_DETAIL> SCHEDULE_DETAILs
		{
			get
			{
				return this._SCHEDULE_DETAILs;
			}
			set
			{
				this._SCHEDULE_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_SCHEDULE", Storage="_DEPARTMENT", ThisKey="dept_id", OtherKey="dept_id", IsForeignKey=true)]
		public DEPARTMENT DEPARTMENT
		{
			get
			{
				return this._DEPARTMENT.Entity;
			}
			set
			{
				DEPARTMENT previousValue = this._DEPARTMENT.Entity;
				if (((previousValue != value) 
							|| (this._DEPARTMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPARTMENT.Entity = null;
						previousValue.SCHEDULEs.Remove(this);
					}
					this._DEPARTMENT.Entity = value;
					if ((value != null))
					{
						value.SCHEDULEs.Add(this);
						this._dept_id = value.dept_id;
					}
					else
					{
						this._dept_id = default(int);
					}
					this.SendPropertyChanged("DEPARTMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_SCHEDULE", Storage="_USER", ThisKey="approved_by", OtherKey="user_id", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.SCHEDULEs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.SCHEDULEs.Add(this);
						this._approved_by = value.user_id;
					}
					else
					{
						this._approved_by = default(Nullable<int>);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_SCHEDULE1", Storage="_USER1", ThisKey="created_by", OtherKey="user_id", IsForeignKey=true)]
		public USER USER1
		{
			get
			{
				return this._USER1.Entity;
			}
			set
			{
				USER previousValue = this._USER1.Entity;
				if (((previousValue != value) 
							|| (this._USER1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER1.Entity = null;
						previousValue.SCHEDULEs1.Remove(this);
					}
					this._USER1.Entity = value;
					if ((value != null))
					{
						value.SCHEDULEs1.Add(this);
						this._created_by = value.user_id;
					}
					else
					{
						this._created_by = default(int);
					}
					this.SendPropertyChanged("USER1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SCHEDULE_DETAILs(SCHEDULE_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.SCHEDULE = this;
		}
		
		private void detach_SCHEDULE_DETAILs(SCHEDULE_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.SCHEDULE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USER_DEPARTMENT_ACCESS")]
	public partial class USER_DEPARTMENT_ACCESS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private int _dept_id;
		
		private string _access_type;
		
		private System.Nullable<System.DateTime> _created_date;
		
		private EntityRef<DEPARTMENT> _DEPARTMENT;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Ondept_idChanging(int value);
    partial void Ondept_idChanged();
    partial void Onaccess_typeChanging(string value);
    partial void Onaccess_typeChanged();
    partial void Oncreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_dateChanged();
    #endregion
		
		public USER_DEPARTMENT_ACCESS()
		{
			this._DEPARTMENT = default(EntityRef<DEPARTMENT>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int dept_id
		{
			get
			{
				return this._dept_id;
			}
			set
			{
				if ((this._dept_id != value))
				{
					if (this._DEPARTMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondept_idChanging(value);
					this.SendPropertyChanging();
					this._dept_id = value;
					this.SendPropertyChanged("dept_id");
					this.Ondept_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_access_type", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string access_type
		{
			get
			{
				return this._access_type;
			}
			set
			{
				if ((this._access_type != value))
				{
					this.Onaccess_typeChanging(value);
					this.SendPropertyChanging();
					this._access_type = value;
					this.SendPropertyChanged("access_type");
					this.Onaccess_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> created_date
		{
			get
			{
				return this._created_date;
			}
			set
			{
				if ((this._created_date != value))
				{
					this.Oncreated_dateChanging(value);
					this.SendPropertyChanging();
					this._created_date = value;
					this.SendPropertyChanged("created_date");
					this.Oncreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_USER_DEPARTMENT_ACCESS", Storage="_DEPARTMENT", ThisKey="dept_id", OtherKey="dept_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DEPARTMENT DEPARTMENT
		{
			get
			{
				return this._DEPARTMENT.Entity;
			}
			set
			{
				DEPARTMENT previousValue = this._DEPARTMENT.Entity;
				if (((previousValue != value) 
							|| (this._DEPARTMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPARTMENT.Entity = null;
						previousValue.USER_DEPARTMENT_ACCESSes.Remove(this);
					}
					this._DEPARTMENT.Entity = value;
					if ((value != null))
					{
						value.USER_DEPARTMENT_ACCESSes.Add(this);
						this._dept_id = value.dept_id;
					}
					else
					{
						this._dept_id = default(int);
					}
					this.SendPropertyChanged("DEPARTMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_USER_DEPARTMENT_ACCESS", Storage="_USER", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.USER_DEPARTMENT_ACCESSes.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.USER_DEPARTMENT_ACCESSes.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USERS")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _username;
		
		private string _password;
		
		private int _emp_id;
		
		private int _role_id;
		
		private int _primary_dept_id;
		
		private System.Nullable<bool> _is_active;
		
		private System.Nullable<System.DateTime> _last_login;
		
		private System.Nullable<System.DateTime> _created_date;
		
		private System.Nullable<System.DateTime> _modified_date;
		
		private EntitySet<AUDIT_LOG> _AUDIT_LOGs;
		
		private EntitySet<SCHEDULE> _SCHEDULEs;
		
		private EntitySet<SCHEDULE> _SCHEDULEs1;
		
		private EntitySet<USER_DEPARTMENT_ACCESS> _USER_DEPARTMENT_ACCESSes;
		
		private EntityRef<DEPARTMENT> _DEPARTMENT;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
		private EntityRef<ROLE> _ROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onemp_idChanging(int value);
    partial void Onemp_idChanged();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onprimary_dept_idChanging(int value);
    partial void Onprimary_dept_idChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    partial void Onlast_loginChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_loginChanged();
    partial void Oncreated_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_dateChanged();
    partial void Onmodified_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmodified_dateChanged();
    #endregion
		
		public USER()
		{
			this._AUDIT_LOGs = new EntitySet<AUDIT_LOG>(new Action<AUDIT_LOG>(this.attach_AUDIT_LOGs), new Action<AUDIT_LOG>(this.detach_AUDIT_LOGs));
			this._SCHEDULEs = new EntitySet<SCHEDULE>(new Action<SCHEDULE>(this.attach_SCHEDULEs), new Action<SCHEDULE>(this.detach_SCHEDULEs));
			this._SCHEDULEs1 = new EntitySet<SCHEDULE>(new Action<SCHEDULE>(this.attach_SCHEDULEs1), new Action<SCHEDULE>(this.detach_SCHEDULEs1));
			this._USER_DEPARTMENT_ACCESSes = new EntitySet<USER_DEPARTMENT_ACCESS>(new Action<USER_DEPARTMENT_ACCESS>(this.attach_USER_DEPARTMENT_ACCESSes), new Action<USER_DEPARTMENT_ACCESS>(this.detach_USER_DEPARTMENT_ACCESSes));
			this._DEPARTMENT = default(EntityRef<DEPARTMENT>);
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			this._ROLE = default(EntityRef<ROLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int NOT NULL")]
		public int emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL")]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primary_dept_id", DbType="Int NOT NULL")]
		public int primary_dept_id
		{
			get
			{
				return this._primary_dept_id;
			}
			set
			{
				if ((this._primary_dept_id != value))
				{
					if (this._DEPARTMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprimary_dept_idChanging(value);
					this.SendPropertyChanging();
					this._primary_dept_id = value;
					this.SendPropertyChanged("primary_dept_id");
					this.Onprimary_dept_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_login", DbType="DateTime2")]
		public System.Nullable<System.DateTime> last_login
		{
			get
			{
				return this._last_login;
			}
			set
			{
				if ((this._last_login != value))
				{
					this.Onlast_loginChanging(value);
					this.SendPropertyChanging();
					this._last_login = value;
					this.SendPropertyChanged("last_login");
					this.Onlast_loginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> created_date
		{
			get
			{
				return this._created_date;
			}
			set
			{
				if ((this._created_date != value))
				{
					this.Oncreated_dateChanging(value);
					this.SendPropertyChanging();
					this._created_date = value;
					this.SendPropertyChanged("created_date");
					this.Oncreated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified_date", DbType="DateTime2")]
		public System.Nullable<System.DateTime> modified_date
		{
			get
			{
				return this._modified_date;
			}
			set
			{
				if ((this._modified_date != value))
				{
					this.Onmodified_dateChanging(value);
					this.SendPropertyChanging();
					this._modified_date = value;
					this.SendPropertyChanged("modified_date");
					this.Onmodified_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_AUDIT_LOG", Storage="_AUDIT_LOGs", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<AUDIT_LOG> AUDIT_LOGs
		{
			get
			{
				return this._AUDIT_LOGs;
			}
			set
			{
				this._AUDIT_LOGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_SCHEDULE", Storage="_SCHEDULEs", ThisKey="user_id", OtherKey="approved_by")]
		public EntitySet<SCHEDULE> SCHEDULEs
		{
			get
			{
				return this._SCHEDULEs;
			}
			set
			{
				this._SCHEDULEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_SCHEDULE1", Storage="_SCHEDULEs1", ThisKey="user_id", OtherKey="created_by")]
		public EntitySet<SCHEDULE> SCHEDULEs1
		{
			get
			{
				return this._SCHEDULEs1;
			}
			set
			{
				this._SCHEDULEs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_USER_DEPARTMENT_ACCESS", Storage="_USER_DEPARTMENT_ACCESSes", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<USER_DEPARTMENT_ACCESS> USER_DEPARTMENT_ACCESSes
		{
			get
			{
				return this._USER_DEPARTMENT_ACCESSes;
			}
			set
			{
				this._USER_DEPARTMENT_ACCESSes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_USER", Storage="_DEPARTMENT", ThisKey="primary_dept_id", OtherKey="dept_id", IsForeignKey=true)]
		public DEPARTMENT DEPARTMENT
		{
			get
			{
				return this._DEPARTMENT.Entity;
			}
			set
			{
				DEPARTMENT previousValue = this._DEPARTMENT.Entity;
				if (((previousValue != value) 
							|| (this._DEPARTMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPARTMENT.Entity = null;
						previousValue.USERs.Remove(this);
					}
					this._DEPARTMENT.Entity = value;
					if ((value != null))
					{
						value.USERs.Add(this);
						this._primary_dept_id = value.dept_id;
					}
					else
					{
						this._primary_dept_id = default(int);
					}
					this.SendPropertyChanged("DEPARTMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_USER", Storage="_EMPLOYEE", ThisKey="emp_id", OtherKey="emp_id", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.USERs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.USERs.Add(this);
						this._emp_id = value.emp_id;
					}
					else
					{
						this._emp_id = default(int);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_USER", Storage="_ROLE", ThisKey="role_id", OtherKey="role_id", IsForeignKey=true)]
		public ROLE ROLE
		{
			get
			{
				return this._ROLE.Entity;
			}
			set
			{
				ROLE previousValue = this._ROLE.Entity;
				if (((previousValue != value) 
							|| (this._ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ROLE.Entity = null;
						previousValue.USERs.Remove(this);
					}
					this._ROLE.Entity = value;
					if ((value != null))
					{
						value.USERs.Add(this);
						this._role_id = value.role_id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("ROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AUDIT_LOGs(AUDIT_LOG entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_AUDIT_LOGs(AUDIT_LOG entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
		
		private void attach_SCHEDULEs(SCHEDULE entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_SCHEDULEs(SCHEDULE entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
		
		private void attach_SCHEDULEs1(SCHEDULE entity)
		{
			this.SendPropertyChanging();
			entity.USER1 = this;
		}
		
		private void detach_SCHEDULEs1(SCHEDULE entity)
		{
			this.SendPropertyChanging();
			entity.USER1 = null;
		}
		
		private void attach_USER_DEPARTMENT_ACCESSes(USER_DEPARTMENT_ACCESS entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_USER_DEPARTMENT_ACCESSes(USER_DEPARTMENT_ACCESS entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
}
#pragma warning restore 1591
